# Application Configuration
spring.application.name=schemasculpt-api
server.port=8080
server.servlet.context-path=/

# CORS Configuration
app.cors.allowed-origins=http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000

# AI Service Configuration
ai.service.url=http://localhost:8000
ai.service.timeout=30s

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/schemasculpt
spring.datasource.username=postgres
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Flyway Migration Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.schemas=public

# Redis Configuration (for temporary sessions)
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms
spring.data.redis.database=0

# Session Configuration
app.session.ttl=1h
app.session.max-size=5MB

# Logging Configuration
logging.level.io.github.sharma_manish_94.schemasculpt_api=INFO
logging.level.org.springframework.web=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Validation Configuration
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# Security Configuration
server.tomcat.max-post-size=5MB
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# OAuth2 GitHub Configuration
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID:your-client-id}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET:your-client-secret}
spring.security.oauth2.client.registration.github.scope=user:email,read:user
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=id

# JWT Configuration
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=86400000

# Frontend Configuration
app.frontend.url=${FRONTEND_URL:http://localhost:3000}

# Actuator Configuration (for monitoring)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# Jackson Configuration (Alternative to Java config)
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.deserialization.fail-on-unknown-properties=false