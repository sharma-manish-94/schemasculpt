<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.6</version>
        <relativePath/>
    </parent>
    <groupId>io.github.sharma-manish-94</groupId>
    <artifactId>schemasculpt-api</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>schemasculpt-api</name>
    <description>Backend API for the SchemaSculpt OpenAPI editor.</description>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <properties>
        <java.version>21</java.version>
    </properties>
    <repositories>
        <repository>
            <id>mulesoft-releases</id>
            <name>MuleSoft Releases Repository</name>
            <url>https://repository-master.mulesoft.org/nexus/content/groups/releases-group/</url>
        </repository>
    </repositories>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>1.21.3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- Jackson Java 8 Date/Time -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <!-- Database Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- OAuth2 Client -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>

        <!-- JWT Support -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>0.11.5</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.11.5</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>0.11.5</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser</artifactId>
            <version>2.1.34</version>
        </dependency>

        <!-- JSON Patch (RFC 6902) Support -->
        <dependency>
            <groupId>com.github.java-json-tools</groupId>
            <artifactId>json-patch</artifactId>
            <version>1.13</version>
        </dependency>
	    		<!-- Testcontainers for Integration Testing -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
	    <dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-test</artifactId>
		    <scope>test</scope>
	    </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
                <configuration>
                    <release>21</release>
                    <compilerArgs>
                        <arg>-Xlint:unchecked</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.4</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.5.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
	        <plugin>
		        <groupId>com.diffplug.spotless</groupId>
		        <artifactId>spotless-maven-plugin</artifactId>
		        <version>2.45.0</version>
		        <configuration>
			        <java>
                        <importOrder />
				        <googleJavaFormat>
					        <version>1.25.2</version>
					        <style>GOOGLE</style>
					        <reflowLongStrings>true</reflowLongStrings>
				        </googleJavaFormat>
				        <endWithNewline/>
			        </java>
		        </configuration>
	        </plugin>

	        <!-- Checkstyle Plugin -->
	        <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-checkstyle-plugin</artifactId>
		        <version>3.5.0</version>
		        <configuration>
			        <configLocation>checkstyle.xml</configLocation>
			        <consoleOutput>true</consoleOutput>
			        <failsOnError>true</failsOnError>
			        <violationSeverity>warning</violationSeverity>
			        <includeTestSourceDirectory>true</includeTestSourceDirectory>
		        </configuration>
		        <executions>
			        <execution>
				        <id>validate</id>
				        <phase>validate</phase>
				        <goals>
					        <goal>check</goal>
				        </goals>
			        </execution>
		        </executions>
		        <dependencies>
			        <dependency>
				        <groupId>com.puppycrawl.tools</groupId>
				        <artifactId>checkstyle</artifactId>
				        <version>10.21.0</version>
			        </dependency>
		        </dependencies>
	        </plugin>

	        <!-- SpotBugs Plugin for bug detection and security vulnerabilities -->
	        <plugin>
		        <groupId>com.github.spotbugs</groupId>
		        <artifactId>spotbugs-maven-plugin</artifactId>
		        <version>4.9.7.0</version>
		        <configuration>
			        <effort>Max</effort>
			        <threshold>Low</threshold>
			        <xmlOutput>true</xmlOutput>
			        <failOnError>true</failOnError>
			        <includeFilterFile/>
			        <excludeFilterFile/>
			        <plugins>
				        <plugin>
					        <groupId>com.h3xstream.findsecbugs</groupId>
					        <artifactId>findsecbugs-plugin</artifactId>
					        <version>1.14.0</version>
				        </plugin>
			        </plugins>
		        </configuration>
		        <executions>
			        <execution>
				        <id>spotbugs-check</id>
				        <phase>verify</phase>
				        <goals>
					        <goal>check</goal>
				        </goals>
			        </execution>
		        </executions>
	        </plugin>

	        <!-- PMD Plugin for code quality analysis -->
	        <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-pmd-plugin</artifactId>
		        <version>3.26.0</version>
		        <configuration>
			        <targetJdk>21</targetJdk>
			        <failOnViolation>true</failOnViolation>
			        <verbose>true</verbose>
			        <rulesets>
				        <ruleset>pmd-ruleset.xml</ruleset>
			        </rulesets>
			        <printFailingErrors>true</printFailingErrors>
		        </configuration>
		        <executions>
			        <execution>
				        <id>pmd-check</id>
				        <phase>verify</phase>
				        <goals>
					        <goal>check</goal>
					        <goal>cpd-check</goal>
				        </goals>
			        </execution>
		        </executions>
		        <dependencies>
			        <dependency>
				        <groupId>net.sourceforge.pmd</groupId>
				        <artifactId>pmd-java</artifactId>
				        <version>7.7.0</version>
			        </dependency>
		        </dependencies>
	        </plugin>

	        <!-- OWASP Dependency Check for security vulnerabilities -->
	        <plugin>
		        <groupId>org.owasp</groupId>
		        <artifactId>dependency-check-maven</artifactId>
		        <version>12.1.8</version>
		        <configuration>
			        <failBuildOnCVSS>7</failBuildOnCVSS>
			        <skipProvidedScope>false</skipProvidedScope>
			        <skipRuntimeScope>false</skipRuntimeScope>
			        <format>ALL</format>
			        <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
		        </configuration>
		        <executions>
			        <execution>
				        <id>dependency-check</id>
				        <phase>verify</phase>
				        <goals>
					        <goal>check</goal>
				        </goals>
			        </execution>
		        </executions>
	        </plugin>

	        <!-- JaCoCo for code coverage -->
	        <plugin>
		        <groupId>org.jacoco</groupId>
		        <artifactId>jacoco-maven-plugin</artifactId>
		        <version>0.8.13</version>
		        <executions>
			        <execution>
				        <id>prepare-agent</id>
				        <goals>
					        <goal>prepare-agent</goal>
				        </goals>
			        </execution>
			        <execution>
				        <id>report</id>
				        <phase>test</phase>
				        <goals>
					        <goal>report</goal>
				        </goals>
			        </execution>
			        <execution>
				        <id>jacoco-check</id>
				        <phase>verify</phase>
				        <goals>
					        <goal>check</goal>
				        </goals>
				        <configuration>
					        <rules>
						        <rule>
							        <element>PACKAGE</element>
							        <limits>
								        <limit>
									        <counter>LINE</counter>
									        <value>COVEREDRATIO</value>
									        <minimum>0.50</minimum>
								        </limit>
							        </limits>
						        </rule>
					        </rules>
				        </configuration>
			        </execution>
		        </executions>
	        </plugin>

	        <!-- Maven Site Plugin -->
	        <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-site-plugin</artifactId>
		        <version>3.12.1</version>
	        </plugin>

	        <!-- Maven Enforcer Plugin for dependency management and rules -->
	        <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-enforcer-plugin</artifactId>
		        <version>3.5.0</version>
		        <executions>
			        <execution>
				        <id>enforce</id>
				        <goals>
					        <goal>enforce</goal>
				        </goals>
				        <configuration>
					        <rules>
						        <requireMavenVersion>
							        <version>[3.6.3,)</version>
						        </requireMavenVersion>
						        <requireJavaVersion>
							        <version>[21,)</version>
						        </requireJavaVersion>
						        <banDuplicatePomDependencyVersions/>
						        <!-- Strict rules disabled for development - enable in CI -->
						        <!-- <dependencyConvergence/> -->
						        <requirePluginVersions>
							        <message>All plugin versions must be defined!</message>
							        <banLatest>true</banLatest>
							        <banRelease>true</banRelease>
							        <banSnapshots>true</banSnapshots>
						        </requirePluginVersions>
						        <!-- <requireUpperBoundDeps/> -->
					        </rules>
				        </configuration>
			        </execution>
		        </executions>
	        </plugin>

        </plugins>
    </build>

</project>